---
import ButtonControl from "../ButtonControl.astro";

type SectionBaseProps = {
  /** Section id */
  id: string;
  class: string;
};
type SectionWithVideoProps = SectionBaseProps & {
  /** Video url */
  video: string;
  /** If screen is true, then the section is in fullscreen */
  screen?: never;
  /** If controls is true, then show the buttons */
  controls?: boolean;
};
type SectionWithoutVideoProps = SectionBaseProps & {
  /** Video url */
  video?: never;
  /** If screen is true, then the section is in fullscreen */
  screen?: boolean;
  /** If controls is true, then show the buttons */
  controls?: never;
};
type Props = SectionWithVideoProps | SectionWithoutVideoProps;

const { id, video, screen, controls, class: className } = Astro.props;

// tw variant
// section => bg
---

{
  video ? (
    <section
      id={id}
      class:list={[
        "relative h-screen flex flex-col items-center justify-center text-center text-white py-0 px-3",
        className,
      ]}
    >
      <div class="absolute h-full left-0 overflow-hidden top-0 w-full">
        <video
          class="min-w-full min-h-full absolute object-cover"
          autoplay
          muted
          loop
          src={video}
          data-hero-video
        />
      </div>
      <div class="absolute w-full h-screen flex justify-center items-center flex-col">
        <div class="bg-black/50 p-3 rounded-lg font-courgette shadow-hero shadow-yellow-300 mx-2">
          <slot />
        </div>
      </div>
      {controls && (
        <div class="absolute top-3 right-3 flex gap-1">
          <ButtonControl
            data-toggle-video-state-button
            aria-label="Play/Pause"
          />
          <ButtonControl
            data-toggle-video-mute-button
            aria-label="Mute/Unmute"
          />
        </div>
      )}
    </section>
  ) : (
    <section
      id={id}
      class:list={["container py-20", { "min-h-screen": screen }, className]}
    >
      <slot />
    </section>
  )
}

<script>
  import { useControlsVideo } from "@lib/useControlsVideo";
  import { importSvg } from "@lib/importSvg";

  // https://codepen.io/forthtilliath/pen/KKjzREb?editors=1010

  useControlsVideo(
    {
      video: "[data-hero-video]",
      btnState: "[data-toggle-video-state-button]",
      btnMute: "[data-toggle-video-mute-button]",
    },
    {
      // muted: false,
      onPlay: () => {
        console.log("play");
      },
      onPause: () => {
        console.log("pause");
      },
      onMute: () => {
        console.log("mute");
      },
      onUnmute: () => {
        console.log("unmute");
      },
      onVolumeChange: () => {
        console.log("volume change");
      },
      playContent: await importSvg("pause"),
      pauseContent: await importSvg("play"),
      muteContent: await importSvg("mute"),
      unmuteContent: [
        await importSvg("volume-low"),
        await importSvg("volume-medium"),
        await importSvg("volume-high"),
      ],
    }
  );
</script>
