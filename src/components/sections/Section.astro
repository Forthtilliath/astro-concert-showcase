---
type SectionBaseProps = {
  /** Section id */
  id: string;
};
type SectionWithVideoProps = SectionBaseProps & {
  /** Video url */
  video: string;
  /** If screen is true, then the section is in fullscreen */
  screen?: never;
  /** If controls is true, then show the buttons */
  controls?: boolean;
};
type SectionWithoutVideoProps = SectionBaseProps & {
  /** Video url */
  video?: never;
  /** If screen is true, then the section is in fullscreen */
  screen?: boolean;
  /** If controls is true, then show the buttons */
  controls?: never;
};
type Props = SectionWithVideoProps | SectionWithoutVideoProps;

const { id, video, screen, controls } = Astro.props;

// tw variant
// section => bg
---

{
  video ? (
    <section
      id={id}
      class="relative h-screen flex flex-col items-center justify-center text-center text-white py-0 px-3"
    >
      <div class="absolute h-full left-0 overflow-hidden top-0 w-full">
        <video
          class="min-w-full min-h-full absolute object-cover"
          autoplay
          muted
          loop
          src={video}
          data-hero-video
        />
      </div>
      <div class="absolute w-full h-screen flex justify-center items-center flex-col">
        <div class="bg-black/50 p-3 rounded-lg font-courgette shadow-hero shadow-yellow-300 mx-2">
          <slot />
        </div>
      </div>
      {controls && (
        <div class="absolute top-3 right-3">
          {/* <button data-toggle-video-state-button>Pause</button> */}
          <button data-toggle-video-state-button>
            {/* <svg
              fill="currentColor"
              stroke-width="0"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 384 512"
              height="1em"
              width="1em"
              class="overflow-visible text-current"
            >
              <path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80v352c0 17.4 9.4 33.4 24.5 41.9S58.2 482 73 473l288-176c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" />
            </svg> */}
          </button>
          <button>Volume</button>
        </div>
      )}
    </section>
  ) : (
    <section
      id={id}
      class:list={[
        "flex justify-center items-center",
        { "min-h-screen": screen },
      ]}
    >
      <slot />
    </section>
  )
}

<script>
  import { useControlsVideo } from "../../lib/useControlsVideo";

  useControlsVideo(
    {
      video: "[data-hero-video]",
      btnState: "[data-toggle-video-state-button]",
    },
    {
      initialState: "Play",
    }
  );
</script>
